openapi: "3.0.0"
info:
  title: Library
  version: 1.0.0
  contact: {}
  description: It books!
servers:
  - url: http://example.com/v1
tags:
  - name: books
    description: Book operations
paths:
  /books:
    get:
      summary: List all books
      description: List all of the books.
      operationId: listBooks
      tags:
        - books
      parameters:
        - name: order
          in: query
          description: The order of the returned items.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: An array of books.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Books"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Book:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Books:
      type: array
      items:
        $ref: "#/components/schemas/Book"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string